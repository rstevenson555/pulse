// pulse website build
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'joda-time:joda-time:2.1'
    compile 'org.yaml:snakeyaml:1.10'
    compile 'org.apache.commons:commons-lang3:3.2.1'
    compile 'commons-lang:commons-lang:2.0'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'log4j:log4j:1.2.17'
    compile 'commons-pool:commons-pool:1.6'
    compile 'commons-digester:commons-digester:1.8'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-codec:commons-codec:1.4'
    compile 'org.postgresql:postgresql:9.3-1100-jdbc4'
    compile 'concurrent:concurrent:1.3.4'
    compile 'com.lmax:disruptor:3.2.0'
    compile 'commons-beanutils:commons-beanutils:1.8.0'
    compile 'javax.activation:activation:1.1'
    compile 'javax.mail:mail:1.4'
    compile 'apache-oro:jakarta-oro:2.0.8'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'tomcat:servlet-api:5.0.16'
    compile 'org.jfree:jfreechart:1.0.14'
    compile 'org.jfree:jcommon:1.0.17'
    compile 'hibernate:hibernate:2.1.7c'
    compile 'dom4j:dom4j:1.3'
    compile 'odmg:odmg:3.0'

    compile files('lib/bos-common-arch.jar','lib/cglib2.jar','lib/jta.jar')
    compile files('lib/ojdbc5.jar','lib/jgroups.jar')
    compile files('lib/bos-common-utilities.jar', 'lib/bos-common-logging.jar', 'lib/cache.jar');
    compile files('lib/struts.jar', 'lib/jaws.jar', 'lib/axis.jar')

    compile files("$parent.project.buildDir/libs/LiveLogParser.jar")

    println "$parent.project.buildDir"
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/java'
        }
    }
}

war {
    from('src/xsl') {
        into('stylesheets')
    }
    from 'src/html'
    from 'src/xsl'
    from 'src/jsp'
    from 'appletjars'
    from('src/jsp') {
        into('jsp-dir')
    }

    webXml file('./logParser-website.xml')

    webInf{
        from('WEB-INF') {
            exclude "web.xml"
        }
        from ('src/dtd') {
            into('dtd')
        }
        from('src/java') {
            into('classes')
            include '*.xml'
            exclude 'com/**'
        }
    }
    from configurations.runtime
    from('META-INF') {
        into('META-INF')
    }

}
