/* Generated by Together */

package com.bos.actions;
//  java

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.bcop.arch.logger.Logger;
import com.bos.helper.ViewLoadTestDiffHelper;
import com.bos.helper.ViewLoadTestHelper;

/**
 * This action class is used for the Main screen.<Br>
 */

public class ViewLoadTestDiffAction extends BaseAction {

	static {
		logger =
			(Logger) Logger.getLogger(ViewLoadTestDiffAction.class.getName());
	}
	
	/**
	 * Process the specified HTTP request, and create the corresponding HTTP
	 * response (or forward to another web component that will create it).
	 * Return an <code>ActionForward</code> instance describing where and how
	 * control should be forwarded, or <code>null</code> if the response has already been completed.
	 * @param mapping    - The ActionMapping used to select this instance
	 * @param actionForm - The optional ActionForm bean for this request (if any)
	 * @param request    - The HTTP request we are processing
	 * @param response   - The HTTP response we are creating
	 * @exception Exception if business logic throws an exception
	 * @return - returns the ActionForward.
	 */
	public ActionForward processAction(
	ActionMapping mapping,
	ActionForm actionForm,
	HttpServletRequest request,
	HttpServletResponse response) {
        System.out.println("!!! View LoadTest DIFF Action Hit !!!");
		ActionForward actionForward=null;
		String forwardString = "error";
		String requestId = null;
        actionForward = mapping.findForward("success");
		//run XMLBuilder
		String selectedDate = request.getParameter("selectedDate");
        
        
        
        String queryParams = null;
		HashMap hm = new HashMap();
		for (Enumeration enumer = request.getParameterNames(); enumer.hasMoreElements();) {
		   String strParameterName = (String)enumer.nextElement();
		   hm.put(strParameterName, request.getParameter(strParameterName));
           if(queryParams != null){
               queryParams +="&"+strParameterName+"="+request.getParameter(strParameterName);
           }else{
               queryParams ="?"+strParameterName+"="+request.getParameter(strParameterName);
           
           }
               
		}

		
		Iterator iter = hm.keySet().iterator();
		int iBaseRun =0;
		ArrayList testRuns = new ArrayList();
		while(iter.hasNext()){
			String key = (String)iter.next();
			Object o = hm.get(key);
			System.out.println(key+":"+o.getClass().getName()+":"+o.toString());
			if(key.equals("baseReport"))
			{
				System.out.println("baseReport is being set to : " + o.toString());
				iBaseRun = Integer.parseInt(o.toString());
				System.out.println("baseReport set to : " + iBaseRun);
				
			}
			try {
                int  i = Integer.parseInt(key);
                testRuns.add(new Integer(i));
            } catch (NumberFormatException e) {
                e.printStackTrace();
            }
		}
        
        ViewLoadTestDiffHelper vlth = null;
        
		Calendar calendar = Calendar.getInstance();
		StringBuffer todaysDate = new StringBuffer(); 
		todaysDate.append(calendar.get(Calendar.DAY_OF_MONTH));
		todaysDate.append(calendar.get(Calendar.MONTH));
		todaysDate.append(calendar.get(Calendar.YEAR));
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Date d = new Date();
		calendar = GregorianCalendar.getInstance();
		calendar.setTime(d);
		calendar.add(Calendar.DAY_OF_MONTH,-1);
		d=calendar.getTime();
		String dateString = sdf.format(d);
		if(iBaseRun == 0){
			iBaseRun = ((Integer)testRuns.get(0)).intValue();
			System.out.println("baseReport reset to : " + iBaseRun);
		}
		System.out.println("baseReport Using : : " + iBaseRun);
		
       	vlth = new ViewLoadTestDiffHelper(dateString, testRuns, iBaseRun, queryParams);
        System.out.println("QueryParams : " + queryParams);

        request.setAttribute(DOM, vlth.getXMLDocument());

		return actionForward;
	}
}

