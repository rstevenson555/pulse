/* Generated by Together */

package com.bos.actions;
//  java
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.hibernate.Hibernate;
import net.sf.hibernate.Query;
import net.sf.hibernate.Session;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import com.bcop.arch.logger.Logger;
import com.bos.arch.HibernateUtil;
import com.bos.helper.MainScreenHelper;
import com.bos.art.model.jdo.DailySummaryBean;

/**
 * This action class is used for the Main screen.<Br>
 */

public class MainScreenAction extends BaseAction {

	static {
		logger =
			(Logger) Logger.getLogger(MainScreenAction.class.getName());
	}
	
	/**
	 * Process the specified HTTP request, and create the corresponding HTTP
	 * response (or forward to another web component that will create it).
	 * Return an <code>ActionForward</code> instance describing where and how
	 * control should be forwarded, or <code>null</code> if the response has already been completed.
	 * @param mapping    - The ActionMapping used to select this instance
	 * @param actionForm - The optional ActionForm bean for this request (if any)
	 * @param request    - The HTTP request we are processing
	 * @param response   - The HTTP response we are creating
	 * @exception Exception if business logic throws an exception
	 * @return - returns the ActionForward.
	 */
	public ActionForward processAction(
	ActionMapping mapping,
	ActionForm actionForm,
	HttpServletRequest request,
	HttpServletResponse response) {
        System.out.println("Action Hit!!!");
		ActionForward actionForward=null;
		String forwardString = "error";
		String requestId = null;
        actionForward = mapping.findForward("success");
		//run XMLBuilder
        
        MainScreenHelper mh = new MainScreenHelper();
        request.setAttribute(DOM, mh.getXMLDocument());

		return actionForward;
	}
	
    private Element createDailySummaryElement(Document doc) {
        Session session = null;
        Element dailySummaryElement = null;
        try {
            dailySummaryElement = doc.createElement("DailySummary");
            //Transaction tx= session.beginTransaction();
            System.out.println("obtained transaction to DB");
            session = HibernateUtil.currentSession();
            Query query = session.createQuery("select DAY from DailySummary");
    
            List dailySummaryList = session.find(
                "from DailySummary as DailySummaryBean where DailySummaryBean.TotalLoads > ?",
                new Integer(1000),
                Hibernate.INTEGER
            );

            Iterator iter = dailySummaryList.iterator();
            System.out.println("create query to DB");
            for (; iter.hasNext();) {
                DailySummaryBean dailySummary = (DailySummaryBean) iter.next();
                System.out.println("daily summary: " + dailySummary.getDay());
            }
            System.out.println("finished query");
            //tx.commit();
            HibernateUtil.closeSession();
        } catch (Exception ex) {
            ex.printStackTrace();            
        }
        return dailySummaryElement;
    }
	
}
